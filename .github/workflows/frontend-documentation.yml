name: Frontend Documentation

on:
  push:
    branches: ['*']
    paths:
      - 'bulak-smart-connect-js/src/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'bulak-smart-connect-js/package-lock.json'
      
      - name: Install dependencies
        run: |
          cd bulak-smart-connect-js
          npm ci
          npm install --save-dev react-styleguidist webpack webpack-cli babel-loader @babel/core @babel/preset-env @babel/preset-react style-loader css-loader file-loader prop-types

      - name: Setup Babel configuration
        run: |
          cd bulak-smart-connect-js
          
          # Create .babelrc file
          cat > .babelrc << 'EOF'
          {
            "presets": ["@babel/preset-env", "@babel/preset-react"]
          }
          EOF
      
      - name: Setup Styleguidist configuration
        run: |
          cd bulak-smart-connect-js
          
          # Create webpack.config.js for Styleguidist
          cat > webpack.config.js << 'EOF'
          const path = require('path');

          module.exports = {
            module: {
              rules: [
                {
                  test: /\.jsx?$/,
                  exclude: /node_modules/,
                  use: {
                    loader: 'babel-loader',
                    options: {
                      presets: ['@babel/preset-env', '@babel/preset-react']
                    }
                  }
                },
                {
                  test: /\.css$/,
                  use: ['style-loader', 'css-loader']
                },
                {
                  test: /\.(png|jpg|gif|svg)$/,
                  use: ['file-loader']
                }
              ]
            },
            resolve: {
              extensions: ['.js', '.jsx']
            }
          };
          EOF
          
          # Create Styleguidist config file with .cjs extension
          cat > styleguide.config.cjs << 'EOF'
          const path = require('path');

          module.exports = {
            title: 'Bulak Smart Connect Component Library',
            defaultExample: false,
            components: 'src/**/[A-Z]*.jsx',
            usageMode: 'expand',
            exampleMode: 'expand',
            pagePerSection: true,
            skipComponentsWithoutExample: false,
            template: {
              head: {
                links: [
                  {
                    rel: 'stylesheet',
                    href: 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap',
                  },
                ],
              },
            },
            styles: {
              StyleGuide: {
                '@global body': {
                  fontFamily: '"Roboto", sans-serif'
                }
              }
            },
            sections: [
              {
                name: 'Introduction',
                content: 'docs/introduction.md',
              },
              {
                name: 'Landing Page',
                components: 'src/LandingPageComponents/[A-Z]*.jsx',
                sectionDepth: 1,
              },
              {
                name: 'Navigation',
                components: 'src/NavigationComponents/[A-Z]*.jsx',
                sectionDepth: 1,
              },
              {
                name: 'User Components',
                components: 'src/UserBulakSmartConnect/**/[A-Z]*.jsx',
                sectionDepth: 2,
              },
              {
                name: 'Admin Components',
                components: 'src/AdminBulakSmartConnect/**/[A-Z]*.jsx',
                sectionDepth: 2,
              },
              {
                name: 'Login Components',
                components: 'src/LogInComponents/[A-Z]*.jsx',
                sectionDepth: 1,
              },
            ],
            require: ['./src/setupProxy.js'],
            webpackConfig: require('./webpack.config.js'),
            propsParser: require('react-docgen').parse,
            getExampleFilename(componentPath) {
              return componentPath.replace(/\.jsx?$/, '.examples.md');
            },
            getComponentPathLine(componentPath) {
              const name = path.basename(componentPath, path.extname(componentPath));
              const dir = path.dirname(componentPath);
              const packageDir = dir.split(path.sep).includes('src') ? path.resolve(dir, '../') : '';
              return `import { ${name} } from '${packageDir ? path.relative(packageDir, dir) : ''}';`;
            },
          };
          EOF
      
      - name: Create setup files
        run: |
          cd bulak-smart-connect-js
          
          # Create a setupProxy.js file to load global styles and mocks
          cat > src/setupProxy.js << 'EOF'
          import './index.css';

          // Mock AuthContext
          window.useAuth = () => ({
            isAuthenticated: true,
            user: { 
              name: 'John Doe', 
              email: 'john@example.com', 
              roles: ['admin']
            },
            login: () => Promise.resolve({ success: true }),
            logout: () => {},
            hasRole: () => true,
            isAdmin: true,
            isStaff: true,
            isCitizen: true
          });

          // Mock BrowserRouter and other contexts
          const mockComponent = (name) => ({ children }) => children;
          window.BrowserRouter = mockComponent('BrowserRouter');
          EOF

      - name: Create documentation files
        run: |
          cd bulak-smart-connect-js
          mkdir -p docs
          
          # Create introduction file
          cat > docs/introduction.md << 'EOF'
          # Bulak Smart Connect Component Library

          This documentation provides an overview of the components used in the Bulak Smart Connect application,
          which serves as the official queuing and information system for the Municipal Civil Registrar
          of San Ildefonso, Bulacan.

          ## Design Principles

          - **User-Centered**: Components focus on ease of use for citizens
          - **Consistency**: Uniform styling and behavior across the application
          - **Accessibility**: Components follow WCAG guidelines where possible
          - **Responsiveness**: Works on desktop and mobile devices

          ## Color Palette

          - Primary: #184a5b
          - Secondary: #8DC3A7
          - Accent: #e2e381
          - Background: #ffffff
          - Text: #333333
          EOF

          # Create auth context mock
          mkdir -p src/__mocks__
          cat > src/__mocks__/authContext.js << 'EOF'
          export const useAuth = () => ({
            isAuthenticated: true,
            user: { 
              name: 'John Doe', 
              email: 'john@example.com', 
              roles: ['admin']
            },
            login: () => Promise.resolve({ success: true }),
            logout: () => {},
            hasRole: () => true,
            isAdmin: true
          });
          EOF

          # Create automatic example for a component
          mkdir -p src/components
          
          # Create a sample button component
          cat > src/components/Button.jsx << 'EOF'
          import React from 'react';
          import PropTypes from 'prop-types';

          /**
           * Basic button component with customizable styling
           */
          const Button = ({ label, primary, onClick }) => {
            const baseStyle = {
              padding: '8px 16px',
              cursor: 'pointer',
              borderRadius: '4px',
              border: 'none',
              backgroundColor: primary ? '#184a5b' : '#e0e0e0',
              color: primary ? 'white' : '#333',
            };

            return (
              <button style={baseStyle} onClick={onClick}>
                {label}
              </button>
            );
          };

          Button.propTypes = {
            /** Text to display inside the button */
            label: PropTypes.string.isRequired,
            /** Whether the button should have primary styling */
            primary: PropTypes.bool,
            /** Function to call when button is clicked */
            onClick: PropTypes.func,
          };

          Button.defaultProps = {
            primary: false,
            onClick: () => {},
          };

          export default Button;
          EOF

          # Create example file for Button
          cat > src/components/Button.examples.md << 'EOF'
          Basic button example:

          ```jsx
          <Button label="Click Me" />
          ```

          Primary button example:

          ```jsx
          <Button label="Primary Button" primary />
          ```
          EOF

      - name: Add script to package.json
        run: |
          cd bulak-smart-connect-js
          npx json -I -f package.json -e 'this.scripts.styleguidist = "styleguidist build"'
          npx json -I -f package.json -e 'if (!this.resolutions) this.resolutions = {}; this.resolutions["react-docgen"] = "^5.4.3"'
          npm install --save-dev react-docgen@5.4.3
      
      - name: Build Styleguidist
        run: |
          cd bulak-smart-connect-js
          npx react-styleguidist build
          touch styleguide/.nojekyll
        
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: bulak-smart-connect-js/styleguide
          target-folder: frontend-docs
          branch: gh-pages
          clean: true
          clean-exclude: |
            .nojekyll
            api-docs/**

      - name: Deploy documentation hub
        run: |
          cd bulak-smart-connect-js
          mkdir -p ../doc_hub
          touch ../doc_hub/.nojekyll
          
          cat > ../doc_hub/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <title>Bulak Smart Connect Documentation Hub</title>
              <style>
                body { 
                  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
                  max-width: 800px;
                  margin: 0 auto;
                  padding: 20px;
                  line-height: 1.6;
                }
                .header {
                  text-align: center;
                  padding: 20px 0;
                  margin-bottom: 40px;
                  border-bottom: 1px solid #eaeaea;
                }
                .header h1 {
                  color: #184a5b;
                  margin-bottom: 10px;
                }
                .card {
                  border: 1px solid #e0e0e0;
                  border-radius: 8px;
                  padding: 24px;
                  margin-bottom: 24px;
                  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                  transition: transform 0.2s, box-shadow 0.2s;
                }
                .card:hover {
                  transform: translateY(-2px);
                  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
                }
                .card h2 {
                  margin-top: 0;
                  color: #184a5b;
                }
                .button {
                  display: inline-block;
                  background-color: #184a5b;
                  color: white;
                  padding: 10px 20px;
                  text-decoration: none;
                  border-radius: 4px;
                  margin-top: 10px;
                  font-weight: 500;
                  transition: background-color 0.2s;
                }
                .button:hover {
                  background-color: #0d3446;
                }
                .footer {
                  text-align: center;
                  color: #666;
                  margin-top: 40px;
                  padding-top: 20px;
                  border-top: 1px solid #eaeaea;
                  font-size: 0.9em;
                }
              </style>
            </head>
            <body>
              <div class="header">
                <h1>Bulak Smart Connect</h1>
                <p>Comprehensive Documentation Hub</p>
              </div>
              
              <div class="card">
                <h2>API Documentation</h2>
                <p>Backend API documentation generated with Compodoc, providing detailed information about endpoints, services, and models.</p>
                <a href="api-docs/" class="button">View API Docs</a>
              </div>
              
              <div class="card">
                <h2>Component Documentation</h2>
                <p>Frontend component documentation built with Styleguidist, showing components, props, and examples.</p>
                <a href="frontend-docs/" class="button">View Components</a>
              </div>
              
              <div class="footer">
                <p>© $(date +%Y) Bulak Smart Connect</p>
              </div>
            </body>
          </html>
          EOF

      - name: Deploy documentation hub
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: doc_hub
          branch: gh-pages
          clean: false