name: Frontend Documentation

on:
  push:
    branches: ['*']
    paths:
      - 'bulak-smart-connect-js/src/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'bulak-smart-connect-js/package-lock.json'
      
      - name: Install Compodoc
        run: |
          cd bulak-smart-connect-js
          npm install --save-dev @compodoc/compodoc
      
      - name: Configure JSDoc comments
        run: |
          cd bulak-smart-connect-js
          
          # Create a tsconfig.json file for Compodoc to use with JSX files
          cat > tsconfig.doc.json << 'EOF'
          {
            "compilerOptions": {
              "outDir": "./dist",
              "sourceMap": true,
              "declaration": false,
              "moduleResolution": "node",
              "emitDecoratorMetadata": true,
              "experimentalDecorators": true,
              "target": "es5",
              "jsx": "react",
              "typeRoots": [
                "node_modules/@types"
              ],
              "lib": [
                "es2017",
                "dom"
              ],
              "allowJs": true
            },
            "include": [
              "src/**/*.js",
              "src/**/*.jsx"
            ],
            "exclude": [
              "node_modules"
            ]
          }
          EOF
          
          # Create theme configuration
          mkdir -p .compodoc
          
          cat > .compodoc/custom-theme.scss << 'EOF'
          .menu {
            background: #184a5b;
          }
          
          .menu-item-link.active {
            background-color: #8DC3A7;
          }
          
          .menu-item-link:hover {
            background-color: #0d3446;
          }
          
          .navbar-default {
            background: #184a5b;
          }
          
          .navbar-default .navbar-brand {
            color: white;
          }
          EOF
      
      - name: Generate documentation
        run: |
          cd bulak-smart-connect-js
          npx compodoc -p tsconfig.doc.json \
            --name="Bulak Smart Connect Components" \
            --output="./documentation" \
            --theme="material" \
            --customTheme="./.compodoc/custom-theme.scss" \
            --includes="./docs" \
            --includesName="Guides" \
            --hideGenerator \
            --disableSourceCode \
            --disableCoverage \
            --disablePrivate \
            --disableProtected \
            --disableInternal
            
          # Create .nojekyll file to prevent GitHub Pages from ignoring underscore files
          touch documentation/.nojekyll
      
      - name: Create additional documentation
        run: |
          cd bulak-smart-connect-js
          
          # Create documentation directory for guides
          mkdir -p docs
          
          # Create a welcome page
          cat > docs/overview.md << 'EOF'
          # Bulak Smart Connect
          
          Welcome to the Bulak Smart Connect component documentation. This documentation site provides information about the React components used in the Bulak Smart Connect application, which serves as the official queuing and information system for the Municipal Civil Registrar of San Ildefonso, Bulacan.
          
          ## Design Principles
          
          - **User-Centered**: Components focus on ease of use for citizens
          - **Consistency**: Uniform styling and behavior across the application
          - **Accessibility**: Components follow WCAG guidelines where possible
          - **Responsiveness**: Works on desktop and mobile devices
          
          ## Color Palette
          
          - Primary: #184a5b
          - Secondary: #8DC3A7
          - Accent: #e2e381
          - Background: #ffffff
          - Text: #333333
          EOF
          
          # Create a components overview page
          cat > docs/components.md << 'EOF'
          # Component Overview
          
          Bulak Smart Connect is built using a component-based architecture with React. The components are organized into several categories:
          
          ## Landing Page Components
          
          Components used on the public-facing landing page.
          
          ## Navigation Components
          
          Components used for navigation throughout the application, including the NavBar and Sidebar.
          
          ## User Dashboard Components
          
          Components used in the citizen user dashboard.
          
          ## Admin Components
          
          Components used in the administrative interface.
          
          ## Authentication Components
          
          Components for login, registration, and authentication.
          EOF
      
      - name: Create simple documentation site
        run: |
          # Create a basic site structure instead of using a problematic starter
          mkdir -p docs-site
          cd docs-site
          
          # Initialize a new Gatsby site without using the starter
          npm init -y
          npm install --save gatsby react react-dom gatsby-plugin-mdx @mdx-js/react @mdx-js/mdx gatsby-source-filesystem

          # Create minimal Gatsby structure
          mkdir -p src/pages src/components
          
          # Create gatsby-config.js
          cat > gatsby-config.js << 'EOF'
          module.exports = {
            siteMetadata: {
              title: 'Bulak Smart Connect Documentation',
              description: 'Component documentation for Bulak Smart Connect',
              author: 'Bulak LGU Smart Connect Team',
            },
            plugins: [
              {
                resolve: 'gatsby-source-filesystem',
                options: {
                  name: 'pages',
                  path: `${__dirname}/src/pages`,
                },
              },
              {
                resolve: 'gatsby-plugin-mdx',
                options: {
                  extensions: ['.mdx', '.md'],
                }
              },
            ],
          };
          EOF

          # Add scripts to package.json
          npm pkg set scripts.build="gatsby build"
          npm pkg set scripts.develop="gatsby develop"
          npm pkg set scripts.serve="gatsby serve"
          npm pkg set scripts.clean="gatsby clean"
      
      - name: Create documentation content
        run: |
          cd docs-site
          
          # Create layout component
          cat > src/components/layout.js << 'EOF'
          import React from 'react';

          const Layout = ({ children }) => {
            return (
              <div style={{
                maxWidth: '1200px',
                margin: '0 auto',
                padding: '20px',
                fontFamily: 'system-ui, sans-serif',
              }}>
                <header style={{ 
                  backgroundColor: '#184a5b',
                  padding: '20px',
                  marginBottom: '20px',
                  color: 'white',
                  borderRadius: '5px'
                }}>
                  <h1>Bulak Smart Connect Docs</h1>
                  <nav style={{ 
                    display: 'flex',
                    gap: '20px'
                  }}>
                    <a href="/" style={{ color: 'white' }}>Home</a>
                    <a href="/components" style={{ color: 'white' }}>Components</a>
                  </nav>
                </header>
                <main>
                  {children}
                </main>
                <footer style={{ 
                  marginTop: '40px',
                  borderTop: '1px solid #eaeaea',
                  paddingTop: '20px',
                  textAlign: 'center',
                  color: '#666'
                }}>
                  <p>Â© {new Date().getFullYear()} Bulak Smart Connect</p>
                </footer>
              </div>
            );
          };

          export default Layout;
          EOF
          
          # Create index page
          cat > src/pages/index.js << 'EOF'
          import React from 'react';
          import Layout from '../components/layout';

          const IndexPage = () => {
            return (
              <Layout>
                <h1>Bulak Smart Connect Documentation</h1>
                <p>
                  Welcome to the Bulak Smart Connect component library documentation.
                  This site provides documentation for the React components used in the Bulak Smart Connect application,
                  which serves as the official queuing and information system for the Municipal Civil Registrar
                  of San Ildefonso, Bulacan.
                </p>

                <h2>Design Principles</h2>
                <ul>
                  <li><strong>User-Centered</strong>: Components focus on ease of use for citizens</li>
                  <li><strong>Consistency</strong>: Uniform styling and behavior across the application</li>
                  <li><strong>Accessibility</strong>: Components follow WCAG guidelines</li>
                  <li><strong>Responsiveness</strong>: Works on desktop and mobile devices</li>
                </ul>

                <h2>Component Categories</h2>
                <ul>
                  <li><a href="/components#landing">Landing Page Components</a></li>
                  <li><a href="/components#navigation">Navigation Components</a></li>
                  <li><a href="/components#user">User Dashboard Components</a></li>
                  <li><a href="/components#admin">Admin Components</a></li>
                  <li><a href="/components#auth">Authentication Components</a></li>
                </ul>
              </Layout>
            );
          };

          export default IndexPage;
          EOF

          # Create components page
          cat > src/pages/components.js << 'EOF'
          import React from 'react';
          import Layout from '../components/layout';

          const ComponentsPage = () => {
            return (
              <Layout>
                <h1>Component Documentation</h1>
                
                <section id="landing">
                  <h2>Landing Page Components</h2>
                  <p>Components used on the public-facing landing page.</p>
                  
                  <h3>Color Scheme</h3>
                  <ul>
                    <li>Primary: #184a5b</li>
                    <li>Secondary: #8DC3A7</li>
                    <li>Accent: #e2e381</li>
                  </ul>
                  
                  <h3>Components</h3>
                  <div>
                    <h4>HeroSection</h4>
                    <p>The main banner section at the top of the landing page.</p>
                    
                    <h4>FeatureCard</h4>
                    <p>Cards displaying the key features of the application.</p>
                  </div>
                </section>
                
                <section id="navigation">
                  <h2>Navigation Components</h2>
                  <p>Components used for navigation throughout the application.</p>
                  
                  <div>
                    <h4>NavBar</h4>
                    <p>The main navigation bar displayed at the top of every page.</p>
                    
                    <h4>Sidebar</h4>
                    <p>Collapsible sidebar navigation for internal application pages.</p>
                  </div>
                </section>

                <section id="user">
                  <h2>User Dashboard Components</h2>
                  <p>Components used in the citizen user dashboard.</p>
                </section>

                <section id="admin">
                  <h2>Admin Components</h2>
                  <p>Components used in the administrative interface.</p>
                </section>

                <section id="auth">
                  <h2>Authentication Components</h2>
                  <p>Components for login, registration and authentication.</p>
                </section>
              </Layout>
            );
          };

          export default ComponentsPage;
          EOF

      - name: Build Gatsby site
        run: |
          cd docs-site
          npx gatsby build
          touch public/.nojekyll
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs-site/public
          target-folder: frontend-docs
          branch: gh-pages
          clean: true
          clean-exclude: |
            .nojekyll
            api-docs/**

      - name: Create Documentation Hub
        run: |
          mkdir -p doc_hub
          touch doc_hub/.nojekyll
          
          cat > doc_hub/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <title>Bulak Smart Connect Documentation Hub</title>
              <style>
                body { 
                  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
                  max-width: 800px;
                  margin: 0 auto;
                  padding: 20px;
                  line-height: 1.6;
                }
                .header {
                  text-align: center;
                  padding: 20px 0;
                  margin-bottom: 40px;
                  border-bottom: 1px solid #eaeaea;
                }
                .header h1 {
                  color: #184a5b;
                  margin-bottom: 10px;
                }
                .card {
                  border: 1px solid #e0e0e0;
                  border-radius: 8px;
                  padding: 24px;
                  margin-bottom: 24px;
                  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                  transition: transform 0.2s, box-shadow 0.2s;
                }
                .card:hover {
                  transform: translateY(-2px);
                  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
                }
                .card h2 {
                  margin-top: 0;
                  color: #184a5b;
                }
                .button {
                  display: inline-block;
                  background-color: #184a5b;
                  color: white;
                  padding: 10px 20px;
                  text-decoration: none;
                  border-radius: 4px;
                  margin-top: 10px;
                  font-weight: 500;
                  transition: background-color 0.2s;
                }
                .button:hover {
                  background-color: #0d3446;
                }
                .footer {
                  text-align: center;
                  color: #666;
                  margin-top: 40px;
                  padding-top: 20px;
                  border-top: 1px solid #eaeaea;
                  font-size: 0.9em;
                }
              </style>
            </head>
            <body>
              <div class="header">
                <h1>Bulak Smart Connect</h1>
                <p>Comprehensive Documentation Hub</p>
              </div>
              
              <div class="card">
                <h2>API Documentation</h2>
                <p>Backend API documentation generated with Compodoc, providing detailed information about endpoints, services, and models.</p>
                <a href="api-docs/" class="button">View API Docs</a>
              </div>
              
              <div class="card">
                <h2>Component Documentation</h2>
                <p>Frontend component documentation generated with Compodoc, showing components, props, and usage examples.</p>
                <a href="frontend-docs/" class="button">View Components</a>
              </div>
              
              <div class="footer">
                <p>Â© $(date +%Y) Bulak Smart Connect</p>
              </div>
            </body>
          </html>
          EOF

      - name: Deploy Documentation Hub
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: doc_hub
          branch: gh-pages
          clean: false