name: API Security Scanning

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday
  workflow_dispatch:

jobs:
  api-security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install backend dependencies
        run: cd bsc-js-backend && npm ci
      
      - name: Start API server for scanning
        run: |
          cd bsc-js-backend
          npm run start:dev > api.log 2>&1 &
          echo $! > api.pid
          sleep 20
          if ! ps -p $(cat api.pid) > /dev/null; then
            echo "API server failed to start"
            cat api.log
            exit 1
          fi
          echo "API server started successfully"
      
      # Using ZAP GitHub Action with SIMPLIFIED parameters
      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'http://localhost:3000'
          fail_action: false
          allow_issue_writing: false
          issue_title: 'ZAP Full Scan Results'
          # Don't specify custom file paths, let ZAP use its defaults
      
      - name: List report files
        if: always()
        run: |
          ls -la *.html *.json *.md || echo "No report files found"
      
      - name: Create report directory
        if: always()
        run: |
          mkdir -p reports
          # Move any ZAP-generated reports to the directory
          mv -f *.html *.json *.md reports/ 2>/dev/null || true
          # List what we captured
          ls -la reports/ || echo "No files moved to reports directory"
      
      - name: Upload ZAP scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-reports
          path: reports/
          retention-days: 30
      
      # Stop the API server
      - name: Stop API server
        if: always()
        run: |
          if [ -f "bsc-js-backend/api.pid" ]; then
            kill $(cat bsc-js-backend/api.pid) || true
          fi