name: Auto-review and Merge Dependency Updates

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manually running'
        required: true
        default: 'Testing dependency update workflow'

permissions:
  contents: write
  pull-requests: write

jobs:
  review-dependencies:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.actor == 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          base-ref: ${{ github.event.pull_request.base.sha || 'main' }}
          head-ref: ${{ github.event.pull_request.head.sha || github.sha }}
      
      - name: Run frontend tests for dependency changes
        if: contains(github.event.pull_request.title, 'bulak-smart-connect-js') || github.event_name == 'workflow_dispatch'
        run: |
          cd bulak-smart-connect-js
          npm ci
          npm run test
          npm audit --production
      
      - name: Run backend tests for dependency changes
        if: contains(github.event.pull_request.title, 'bsc-js-backend') || github.event_name == 'workflow_dispatch'
        run: |
          cd bsc-js-backend
          npm ci
          npm run test
          npm audit --production
      
      - name: Determine update type
        id: update-type
        if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "PR title: $PR_TITLE"
          
          if [[ $PR_TITLE =~ from\ [0-9]+\.[0-9]+\.[0-9]+\ to\ ([0-9]+)\.[0-9]+\.[0-9]+ ]]; then
            OLD_MAJOR=$(echo $PR_TITLE | sed -E 's/.*from ([0-9]+)\.[0-9]+\.[0-9]+ to.*/\1/')
            NEW_MAJOR=$(echo $PR_TITLE | sed -E 's/.*to ([0-9]+)\.[0-9]+\.[0-9]+.*/\1/')
            
            if [[ $NEW_MAJOR -gt $OLD_MAJOR ]]; then
              echo "update_type=major" >> $GITHUB_OUTPUT
              echo "Major version update detected - requires manual review"
            else
              echo "update_type=minor" >> $GITHUB_OUTPUT
              echo "Minor/patch update detected - can be auto-merged"
            fi
          else
            echo "update_type=unknown" >> $GITHUB_OUTPUT
            echo "Could not determine update type - requires manual review"
          fi

      - name: Determine if GitHub Actions update
        id: actions-check
        if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ $PR_TITLE == *"github-actions"* ]]; then
            echo "is_actions_update=true" >> $GITHUB_OUTPUT
            echo "GitHub Actions update detected"
          else
            echo "is_actions_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Auto-approve PR
        if: success() && github.event_name == 'pull_request'
        run: |
          gh pr review ${{ github.event.pull_request.number }} --approve
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add labels based on update type
        if: success() && github.event_name == 'pull_request'
        run: |
          if [ "${{ steps.update-type.outputs.update_type }}" == "major" ]; then
            gh pr edit ${{ github.event.pull_request.number }} --add-label "dependency,major-update,manual-review-required"
          elif [ "${{ steps.update-type.outputs.update_type }}" == "minor" ]; then
            gh pr edit ${{ github.event.pull_request.number }} --add-label "dependency,minor-update,safe-to-merge"
          else
            gh pr edit ${{ github.event.pull_request.number }} --add-label "dependency,needs-review"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check security scan status
        id: security-check
        if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
        run: |
          echo "Checking security scan status..."
            
          # Wait a bit for security scan to potentially start/complete
          sleep 15
            
          # Check if security scan workflow has been triggered
          RUNS=$(gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/actions/workflows/dependency-security-scan.yml/runs \
            --jq '.workflow_runs[] | select(.head_sha=="${{ github.event.pull_request.head.sha }}") | .conclusion')
            
          if [[ "$RUNS" == "success" ]]; then
            echo "security_passed=true" >> $GITHUB_OUTPUT
            echo "✅ Security scan passed!"
          else
            # Check if it's still running
            RUNNING=$(gh api \
              -H "Accept: application/vnd.github+json" \
              /repos/${{ github.repository }}/actions/workflows/dependency-security-scan.yml/runs \
              --jq '.workflow_runs[] | select(.head_sha=="${{ github.event.pull_request.head.sha }}") | .status')
              
            if [[ "$RUNNING" == "in_progress" ]]; then
              echo "security_passed=pending" >> $GITHUB_OUTPUT
              echo "⏳ Security scan is still running. Auto-merge will be skipped until it completes."
            else
              echo "security_passed=false" >> $GITHUB_OUTPUT
              echo "❌ Security scan failed or wasn't triggered."
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-merge minor updates
        if: >
          success() && 
          (steps.update-type.outputs.update_type == 'minor' || steps.actions-check.outputs.is_actions_update == 'true') && 
          steps.security-check.outputs.security_passed == 'true' &&
          github.event_name == 'pull_request'
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          BRANCH_NAME="deps/auto-merge-$PR_NUMBER"
            
          # Create a new branch to store these changes
          git fetch origin pull/$PR_NUMBER/head:$BRANCH_NAME
          git checkout $BRANCH_NAME
            
          # Push branch to repository
          git push origin $BRANCH_NAME
            
          # Enable auto-merge on the PR
          gh pr merge $PR_NUMBER --auto --squash --delete-branch=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Add pending security scan message
        if: >
          success() &&
          (steps.update-type.outputs.update_type == 'minor' || steps.actions-check.outputs.is_actions_update == 'true') && 
          steps.security-check.outputs.security_passed == 'pending' &&
          github.event_name == 'pull_request'
        run: |
            gh pr comment ${{ github.event.pull_request.number }} --body "⏳ This PR is eligible for auto-merge, but security scan is still running. Auto-merge will be enabled once security checks pass."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}