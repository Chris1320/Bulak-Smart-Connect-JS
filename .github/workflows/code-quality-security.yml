name: Code Quality and Security

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday

jobs:
  frontend-linting:
    name: Frontend Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules and ESLint cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .eslintcache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Dependencies
        run: |
          cd bulak-smart-connect-js
          npm ci
      
      - name: Run Lint
        run: |
          cd bulak-smart-connect-js
          npm run lint
      
      - name: Check Formatting
        run: |
          cd bulak-smart-connect-js
          npx prettier --check "src/**/*.{js,jsx,ts,tsx,json,css,scss}"
  
  backend-linting:
    name: Backend Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules and ESLint cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .eslintcache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Dependencies
        run: |
          cd bsc-js-backend
          npm ci
      
      - name: Run Lint
        run: |
          cd bsc-js-backend
          npm run lint
      
      - name: Check Formatting
        run: |
          cd bsc-js-backend
          npx prettier --check "src/**/*.{js,ts,json}"

  frontend-security:
    name: Frontend Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules and ESLint cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .eslintcache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Dependencies
        run: |
          cd bulak-smart-connect-js
          npm ci
      
      - name: Security Audit
        run: |
          cd bulak-smart-connect-js
          npm audit --production --audit-level=moderate

  backend-security:
    name: Backend Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules and ESLint cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .eslintcache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Dependencies
        run: |
          cd bsc-js-backend
          npm ci
      
      - name: Security Audit
        run: |
          cd bsc-js-backend
          npm audit --production --audit-level=moderate
  
  frontend-coverage:
    name: Frontend Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules and ESLint cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .eslintcache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Dependencies
        run: |
          cd bulak-smart-connect-js
          npm ci
          npm install --save-dev @vitest/coverage-v8
      
      - name: Run Tests with Coverage
        run: |
          cd bulak-smart-connect-js
          npm run test -- --coverage
      
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: bulak-smart-connect-js/coverage/
  
  backend-coverage:
    name: Backend Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules and ESLint cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .eslintcache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Dependencies
        run: |
          cd bsc-js-backend
          npm ci
      
      - name: Run Tests with Coverage
        run: |
          cd bsc-js-backend
          npm run test -- --coverage
      
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: bsc-js-backend/coverage/

  frontend-bundle-analysis:
    name: Frontend Bundle Size Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules and ESLint cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .eslintcache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies and source-map-explorer
        run: |
          cd bulak-smart-connect-js
          npm ci
          npm install source-map-explorer --no-save
      
      - name: Build with source maps
        run: |
          cd bulak-smart-connect-js
          npm run build -- --sourcemap=inline
      
      - name: Analyze bundle size
        run: |
          cd bulak-smart-connect-js
          npx source-map-explorer 'dist/assets/*.js' --html bundle-analysis.html --no-border-checks
          echo "Bundle size summary:"
          echo "$(du -sh dist/assets/*.js | sort -hr)"
      
      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: bulak-smart-connect-js/bundle-analysis.html

      - name: Build with visualization
        run: |
          cd bulak-smart-connect-js
          npm run build

      - name: Upload visualizer report
        uses: actions/upload-artifact@v4
        with:
          name: bundle-visualization
          path: bulak-smart-connect-js/stats.html

  backend-bundle-analysis:
    name: Backend Bundle Size Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .eslintcache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies and analysis tools
        run: |
          cd bsc-js-backend
          npm ci
          npm install webpack-bundle-analyzer --no-save
      
      - name: Build backend with webpack stats
        run: |
          cd bsc-js-backend
          NODE_ENV=production npm run build -- --webpack
          npx webpack-bundle-analyzer dist/webpack-stats.json dist --report stats.html --no-open
      
      - name: Generate size report
        run: |
          cd bsc-js-backend
          echo "Backend bundle size summary:" > size-report.txt
          echo "=============================" >> size-report.txt
          echo "" >> size-report.txt
          find dist -type f -name "*.js" | xargs du -sh | sort -hr >> size-report.txt
          echo "" >> size-report.txt
          echo "Total size:" >> size-report.txt
          du -sh dist >> size-report.txt
          cat size-report.txt
      
      - name: Upload bundle visualization
        uses: actions/upload-artifact@v4
        with:
          name: backend-bundle-visualization
          path: bsc-js-backend/stats.html
      
      - name: Upload size report
        uses: actions/upload-artifact@v4
        with:
          name: backend-size-report
          path: bsc-js-backend/size-report.txt