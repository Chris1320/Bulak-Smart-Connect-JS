var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.404,1,1.614]],["body/controllers/AppController.html",[0,2.105,1,2.42,2,1.637,3,0.634,4,0.54,5,0.54,6,2.6,7,0.736,8,2.105,9,3.901,10,2.189,11,0.05,12,1.105,13,3.224,14,1.637,15,1.842,16,1.089,17,0.847,18,2.036,19,2.6,20,0.634,21,0.371,22,2.189,23,3.224,24,1.433,25,3.224,26,0.038,27,0.038]],["title/modules/AppModule.html",[28,1.079,29,1.614]],["body/modules/AppModule.html",[1,2.156,2,1.587,3,0.42,4,0.358,5,0.358,11,0.05,16,1.256,17,0.562,18,2.006,19,1.724,20,0.42,21,0.246,26,0.029,27,0.029,28,1.441,29,2.893,30,0.95,31,1.085,32,1.451,33,1.451,34,1.085,35,2.508,36,1.248,37,1.724,38,1.724,39,1.724,40,2.292,41,2.292,42,2.122,43,1.451,44,1.248,45,2.138,46,2.508,47,3.125,48,2.759,49,1.248,50,1.451,51,1.085,52,1.451,53,2.138,54,2.138,55,2.138,56,2.138,57,2.138,58,2.138,59,2.52,60,2.138,61,1.724,62,1.724,63,0.643,64,1.724,65,1.724,66,2.138,67,1.724,68,2.138,69,1.724,70,2.138,71,0.95,72,2.138,73,1.724,74,2.138,75,1.248,76,1.724,77,1.724,78,1.724,79,2.138,80,1.724,81,1.451]],["title/injectables/AppService.html",[18,1.229,82,0.831]],["body/injectables/AppService.html",[3,0.673,4,0.574,5,0.574,7,0.782,8,2.187,9,3.989,11,0.049,12,1.174,14,1.739,15,1.915,16,0.9,17,0.9,18,1.915,20,0.673,21,0.394,24,1.522,26,0.039,27,0.039,82,1.295,83,1.739,84,2.763,85,3.426,86,3.426,87,3.426]],["title/controllers/AuthController.html",[0,1.404,88,1.614]],["body/controllers/AuthController.html",[0,1.003,2,1.003,3,0.389,4,0.331,5,0.331,7,0.451,8,1.497,10,2.395,11,0.05,12,1.209,14,1.791,16,1.099,17,0.519,20,0.389,21,0.227,22,1.342,24,1.568,26,0.027,27,0.027,63,0.886,88,1.722,89,1.594,90,1.977,91,1.977,92,2.378,93,2.98,94,2.378,95,2.378,96,1.977,97,1.977,98,1.977,99,2.395,100,1.791,101,2.395,102,2.949,103,1.594,104,2.309,105,2.949,106,1.977,107,2.002,108,1.594,109,2.309,110,2.949,111,1.977,112,1.977,113,1.977,114,1.977,115,2.949,116,1.342,117,1.568,118,1.594,119,1.594,120,1.594,121,1.154,122,1.154,123,1.977,124,1.977,125,1.977,126,1.594,127,1.977,128,1.594,129,1.342,130,2.378,131,1.594,132,1.977,133,1.594,134,1.594,135,1.342,136,1.154,137,1.977,138,1.977,139,1.977,140,1.977,141,1.977,142,1.977,143,1.977,144,1.977,145,1.977,146,1.977,147,1.977,148,1.977,149,1.977,150,1.977,151,1.977]],["title/modules/AuthModule.html",[28,1.079,40,1.404]],["body/modules/AuthModule.html",[2,1.582,3,0.419,4,0.357,5,0.357,11,0.051,16,1.28,17,0.56,20,0.419,21,0.245,24,0.947,26,0.028,27,0.028,28,1.438,30,0.947,31,1.082,32,1.446,33,1.446,34,1.082,35,2.503,36,2.152,40,2.514,42,2.116,43,1.446,44,1.243,46,1.446,48,2.503,49,1.243,50,1.446,51,1.082,61,1.718,62,1.718,88,2.152,117,2.256,118,1.718,122,1.243,152,1.718,153,1.718,154,1.718,155,2.577,156,2.13,157,2.13,158,1.446,159,3.117,160,1.243,161,0.947,162,1.718,163,2.13,164,2.13,165,2.13,166,2.13,167,2.13,168,2.13,169,2.13,170,2.13,171,2.13,172,2.13,173,2.13,174,1.718]],["title/injectables/AuthService.html",[82,0.831,117,1.229]],["body/injectables/AuthService.html",[3,0.233,4,0.198,5,0.198,7,0.27,8,0.999,11,0.051,12,1.206,14,1.656,15,0.874,16,1.025,17,0.311,20,0.233,21,0.136,24,1.121,26,0.018,27,0.018,51,0.601,63,1.057,71,1.8,82,0.591,83,0.601,92,1.587,93,2.91,94,1.587,95,1.587,99,2.389,100,1.893,101,2.389,103,1.587,104,2.12,107,1.713,108,1.587,109,1.786,116,0.804,117,0.874,119,0.955,120,0.955,126,0.955,128,0.955,129,2.75,130,1.587,131,2.63,133,0.955,134,2.37,135,2.214,136,1.716,158,0.804,161,1.856,162,0.955,175,0.955,176,2.939,177,1.967,178,1.967,179,1.587,180,1.184,181,2.37,182,3.728,183,1.184,184,1.967,185,1.184,186,1.587,187,1.184,188,0.955,189,1.184,190,1.184,191,2.12,192,1.184,193,1.184,194,1.184,195,1.967,196,1.184,197,1.967,198,1.184,199,1.184,200,1.184,201,0.804,202,1.587,203,1.184,204,2.524,205,1.967,206,1.184,207,2.524,208,1.184,209,1.184,210,1.184,211,1.184,212,1.184,213,1.967,214,1.184,215,1.587,216,1.184,217,1.184,218,1.184,219,1.967,220,2.524,221,1.184,222,1.184,223,1.184,224,0.955,225,1.184,226,1.184,227,1.184,228,2.939,229,1.184,230,1.184,231,1.184,232,1.184,233,1.184,234,1.184,235,1.184,236,1.967,237,1.184,238,1.184,239,1.587,240,1.967,241,1.184,242,1.184,243,1.967,244,1.967,245,1.184,246,1.184,247,1.184,248,1.184]],["title/injectables/JwtAuthGuard.html",[82,0.831,121,1.614]],["body/injectables/JwtAuthGuard.html",[3,0.71,4,0.604,5,0.604,11,0.049,16,1.169,17,0.948,20,0.71,21,0.415,26,0.041,27,0.041,82,1.338,83,1.833,121,2.599,160,2.107,249,2.911,250,2.911,251,3.59,252,4.452,253,3.61]],["title/injectables/JwtStrategy.html",[82,0.831,155,1.404]],["body/injectables/JwtStrategy.html",[3,0.478,4,0.407,5,0.407,7,0.555,8,1.74,11,0.05,12,1.36,14,1.234,16,1.132,17,0.639,20,0.478,21,0.28,22,1.651,24,1.08,26,0.031,27,0.031,48,3.201,49,1.419,63,1.03,80,1.96,82,1.03,83,1.234,93,2.695,99,2.327,100,1.74,101,2.327,107,1.651,116,1.651,122,1.419,129,1.651,135,1.651,136,1.419,155,1.74,160,1.419,179,1.96,188,1.96,191,1.234,224,1.96,239,2.764,251,2.764,254,1.96,255,3.427,256,2.431,257,2.431,258,3.427,259,2.431,260,2.431,261,2.431,262,2.431,263,1.96,264,3.969,265,2.431,266,2.431,267,2.431,268,1.651,269,2.431,270,2.431,271,2.431,272,2.431,273,2.431,274,2.431,275,2.431]],["title/classes/LoginDto.html",[21,0.318,104,1.404]],["body/classes/LoginDto.html",[3,0.685,4,0.583,5,0.583,7,0.795,11,0.048,12,1.493,15,2.212,20,0.685,21,0.401,26,0.04,27,0.04,63,1.309,71,2.111,104,2.211,191,2.412,276,2.366,277,2.81,278,2.211,279,3.485,280,3.485]],["title/classes/RegisterDto.html",[21,0.318,109,1.404]],["body/classes/RegisterDto.html",[3,0.651,4,0.555,5,0.555,7,0.756,11,0.048,12,1.591,15,2.292,20,0.651,21,0.381,26,0.039,27,0.039,63,1.395,71,2.063,100,2.356,109,2.142,191,2.356,276,2.249,278,2.142,281,2.671,282,3.313,283,3.313,284,3.313]],["title/entities/User.html",[161,1.229,285,1.877]],["body/entities/User.html",[3,0.5,4,0.426,5,0.426,7,0.58,10,3.137,11,0.049,12,1.584,15,2.126,16,0.668,20,0.5,21,0.293,26,0.032,27,0.032,59,2.853,63,1.389,71,1.807,75,1.485,100,2.232,161,1.572,186,2.853,191,2.065,201,1.727,278,1.796,285,1.727,286,2.051,287,4.067,288,4.067,289,3.538,290,2.544,291,3.538,292,2.544,293,2.544,294,2.544,295,4.067,296,2.544,297,4.784,298,2.544,299,2.544,300,3.538,301,2.544,302,2.544]],["title/modules/UsersModule.html",[28,1.079,41,1.404]],["body/modules/UsersModule.html",[3,0.689,4,0.587,5,0.587,11,0.05,16,1.251,17,0.921,20,0.689,21,0.403,26,0.04,27,0.04,28,1.705,30,1.558,36,2.046,41,2.219,46,2.38,50,2.968,51,1.78,161,1.558,174,2.827,303,3.505,304,3.505]],["title/coverage.html",[305,2.543]],["body/coverage.html",[0,1.908,1,1.622,5,0.465,6,2.241,11,0.049,18,1.235,21,0.432,26,0.034,27,0.034,34,1.41,52,1.886,63,0.835,82,1.371,84,2.241,88,1.622,89,2.241,104,1.41,109,1.41,117,1.235,121,1.622,136,1.622,155,1.41,161,1.235,175,2.241,249,2.241,250,2.241,254,2.241,277,2.241,281,2.241,285,1.886,286,2.241,305,1.886,306,2.241,307,2.778,308,2.778,309,5.283,310,3.758,311,3.758,312,2.778,313,3.758,314,4.563,315,2.241,316,2.778,317,2.241,318,2.778,319,2.778,320,2.778]],["title/dependencies.html",[31,1.684,321,1.873]],["body/dependencies.html",[11,0.051,17,0.833,26,0.037,27,0.037,31,1.611,49,1.852,51,1.611,122,1.852,158,2.154,160,1.852,201,2.154,202,2.559,263,3.309,322,4.548,323,3.173,324,3.173,325,4.104,326,3.173,327,3.173,328,3.173,329,3.173,330,3.173,331,3.173,332,3.173,333,3.173,334,3.173,335,3.173,336,3.173,337,3.173,338,3.173,339,3.173,340,3.173,341,3.173]],["title/miscellaneous/functions.html",[342,1.356,343,2.675]],["body/miscellaneous/functions.html",[7,0.923,11,0.044,26,0.044,27,0.044,34,2.574,317,3.263,342,2.362,343,3.263,344,4.046]],["title/index.html",[7,0.53,345,2.322,346,2.322]],["body/index.html",[4,0.265,11,0.046,26,0.023,27,0.023,44,2.346,81,1.688,181,1.276,215,3.241,305,1.074,306,2.006,347,1.582,348,1.582,349,3.072,350,2.487,351,1.582,352,1.582,353,1.582,354,1.582,355,2.487,356,1.276,357,3.072,358,1.582,359,1.582,360,3.482,361,1.582,362,3.482,363,4.353,364,1.582,365,4.203,366,1.582,367,1.582,368,1.582,369,2.487,370,1.582,371,1.582,372,3.072,373,1.582,374,2.487,375,1.582,376,1.582,377,1.582,378,1.582,379,1.582,380,3.482,381,4.353,382,4.018,383,1.582,384,2.487,385,1.582,386,1.582,387,1.582,388,1.582,389,1.582,390,2.487,391,3.482,392,1.582,393,2.487,394,1.582,395,1.582,396,2.487,397,4.018,398,3.482,399,1.582,400,2.487,401,1.582,402,1.582,403,1.582,404,1.582,405,3.482,406,1.582,407,1.582,408,1.582,409,1.582,410,2.487,411,1.582,412,1.582,413,1.582,414,1.582,415,1.582,416,2.487,417,1.582,418,1.582,419,1.582,420,2.487,421,1.582,422,1.582,423,2.808,424,2.487,425,1.582,426,1.582,427,1.582,428,1.582,429,1.582,430,1.582,431,1.582,432,1.582,433,2.487,434,1.582,435,1.276,436,1.582,437,1.582,438,3.072,439,1.582,440,1.582,441,1.582,442,1.582,443,1.582,444,1.582,445,2.487,446,1.582,447,1.582,448,1.582,449,1.582,450,1.582,451,2.487,452,1.582,453,1.582,454,1.582,455,2.487,456,2.487,457,1.582,458,1.582,459,1.582,460,1.582,461,1.582,462,1.582,463,1.582,464,1.582,465,1.582,466,1.582,467,1.582,468,1.276,469,1.582,470,1.582,471,1.582,472,1.582,473,1.582,474,1.582,475,1.276]],["title/modules.html",[30,1.665]],["body/modules.html",[11,0.042,26,0.042,27,0.042,29,2.256,30,1.717,40,1.962,41,1.962,423,3.742,435,3.117,476,4.641,477,4.641,478,4.973,479,3.865]],["title/overview.html",[480,3.021]],["body/overview.html",[2,1.437,11,0.047,18,1.911,26,0.035,27,0.035,28,1.104,29,2.995,30,1.258,31,1.437,32,1.922,33,1.922,34,1.437,35,1.922,36,1.652,37,2.283,38,2.283,39,2.283,40,2.639,41,2.183,42,2.584,43,1.922,44,1.652,75,1.652,83,1.437,117,2.243,152,2.283,153,2.283,154,2.283,155,2.563,276,1.922,480,2.283,481,2.83,482,3.806,483,2.83,484,2.83]],["title/properties.html",[278,1.684,321,1.873]],["body/properties.html",[11,0.049,26,0.043,27,0.043,278,2.014,356,3.199,468,3.199,475,3.199,485,3.967,486,3.967,487,3.967]],["title/miscellaneous/variables.html",[268,2.252,342,1.356]],["body/miscellaneous/variables.html",[7,0.724,11,0.05,26,0.037,27,0.037,52,2.786,63,1.233,64,2.559,65,2.559,67,2.559,69,2.559,71,1.41,73,2.559,75,1.852,76,2.559,77,2.559,78,2.559,81,2.786,268,2.154,315,2.559,342,1.852,488,3.173,489,3.173,490,3.173,491,3.173,492,3.173,493,3.173,494,3.173,495,3.173,496,3.173,497,3.173,498,3.173,499,3.173,500,3.173,501,4.104,502,3.173]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":486,"title":{},"body":{"properties.html":{}}}],["0.2.2",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["0.3.21",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":483,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["11.0.12",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["16.4.7",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["2",{"_index":482,"title":{},"body":{"overview.html":{}}}],["3",{"_index":481,"title":{},"body":{"overview.html":{}}}],["3.14.0",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":484,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["7.8.2",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["__dirname",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowing",{"_index":411,"title":{},"body":{"index.html":{}}}],["already",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":461,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":382,"title":{},"body":{"index.html":{}}}],["applications",{"_index":355,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["attempt",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":250,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":88,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":253,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":252,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":468,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":117,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":479,"title":{},"body":{"modules.html":{}}}],["await",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["aws",{"_index":400,"title":{},"body":{"index.html":{}}}],["backers",{"_index":462,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('invalid",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["based",{"_index":395,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(logindto.password",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["board",{"_index":454,"title":{},"body":{"index.html":{}}}],["body",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":478,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":476,"title":{},"body":{"modules.html":{}}}],["building",{"_index":350,"title":{},"body":{"index.html":{}}}],["bulak_smart_connect",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["channel",{"_index":426,"title":{},"body":{"index.html":{}}}],["check",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["class",{"_index":21,"title":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["classes",{"_index":276,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"overview.html":{}}}],["clicks",{"_index":410,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":394,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["column",{"_index":297,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":293,"title":{},"body":{"entities/User.html":{}}}],["come",{"_index":417,"title":{},"body":{"index.html":{}}}],["config",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('jwt_secret",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["config/database.config",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('db_host",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_name",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_password",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_port",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_username",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt_secret",{"_index":265,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["conflictexception",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["conflictexception('email",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.error('login",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('comparing",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('generated",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('login",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["console.log('password",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('register",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log('stored",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('user",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(configservice",{"_index":256,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(usersrepository",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["courses",{"_index":432,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":305,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created_at",{"_index":291,"title":{},"body":{"entities/User.html":{}}}],["createdat",{"_index":287,"title":{},"body":{"entities/User.html":{}}}],["createdatecolumn",{"_index":300,"title":{},"body":{"entities/User.html":{}}}],["createdatecolumn({name",{"_index":290,"title":{},"body":{"entities/User.html":{}}}],["credentials",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["data",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["database",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":289,"title":{},"body":{"entities/User.html":{}}}],["debug",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["debugging",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/User.html":{}}}],["deeper",{"_index":428,"title":{},"body":{"index.html":{}}}],["default",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":380,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":399,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":390,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":409,"title":{},"body":{"index.html":{}}}],["description",{"_index":356,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":366,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":440,"title":{},"body":{"index.html":{}}}],["discord",{"_index":425,"title":{},"body":{"index.html":{}}}],["dive",{"_index":427,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":306,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["dto/login.dto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["e2e",{"_index":375,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":351,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":388,"title":{},"body":{"index.html":{}}}],["email",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["endpoint",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["ensure",{"_index":386,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":444,"title":{},"body":{"index.html":{}}}],["entities",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/user.entity",{"_index":304,"title":{},"body":{"modules/UsersModule.html":{}}}],["entity",{"_index":285,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"coverage.html":{}}}],["entity('users",{"_index":301,"title":{},"body":{"entities/User.html":{}}}],["entity{.ts,.js",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":267,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["error",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["error('jwt_secret",{"_index":266,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["example",{"_index":362,"title":{},"body":{"index.html":{}}}],["existinguser",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":430,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":251,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":261,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":271,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["false",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{}}}],["fast",{"_index":403,"title":{},"body":{"index.html":{}}}],["features",{"_index":413,"title":{},"body":{"index.html":{}}}],["few",{"_index":405,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["focus",{"_index":412,"title":{},"body":{"index.html":{}}}],["follow",{"_index":448,"title":{},"body":{"index.html":{}}}],["format",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["found",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":349,"title":{},"body":{"index.html":{}}}],["full",{"_index":443,"title":{},"body":{"index.html":{}}}],["function",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":343,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":408,"title":{},"body":{"index.html":{}}}],["get('profile",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["getprofile(@request",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(userid",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":345,"title":{"index.html":{}},"body":{}}],["graph",{"_index":435,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":458,"title":{},"body":{"index.html":{}}}],["hands",{"_index":429,"title":{},"body":{"index.html":{}}}],["handy",{"_index":418,"title":{},"body":{"index.html":{}}}],["hash",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":433,"title":{},"body":{"index.html":{}}}],["here",{"_index":466,"title":{},"body":{"index.html":{}}}],["hit",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["host",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":472,"title":{},"body":{"index.html":{}}}],["id",{"_index":288,"title":{},"body":{"entities/User.html":{}}}],["identifier",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":272,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{}}}],["information",{"_index":392,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":415,"title":{},"body":{"index.html":{}}}],["inject",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":82,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectrepository(user",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["install",{"_index":407,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":364,"title":{},"body":{"index.html":{}}}],["interact",{"_index":436,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["isglobal",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["ispasswordvalid",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidemail",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidemail(email",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["job",{"_index":451,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":453,"title":{},"body":{"index.html":{}}}],["join",{"_index":464,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":121,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":270,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":155,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":469,"title":{},"body":{"index.html":{}}}],["key",{"_index":383,"title":{},"body":{"index.html":{}}}],["learn",{"_index":421,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["license",{"_index":475,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":456,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":450,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":104,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.email",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto.password",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":393,"title":{},"body":{"index.html":{}}}],["loop",{"_index":446,"title":{},"body":{"index.html":{}}}],["makes",{"_index":401,"title":{},"body":{"index.html":{}}}],["managing",{"_index":414,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":397,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["miscellaneous",{"_index":342,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":455,"title":{},"body":{"index.html":{}}}],["mode",{"_index":369,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":391,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mysql2",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":470,"title":{},"body":{"index.html":{}}}],["name",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["need",{"_index":441,"title":{},"body":{"index.html":{}}}],["nest",{"_index":357,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":474,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":381,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["node.js",{"_index":348,"title":{},"body":{"index.html":{}}}],["npm",{"_index":363,"title":{},"body":{"index.html":{}}}],["null",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{}}}],["offer",{"_index":452,"title":{},"body":{"index.html":{}}}],["official",{"_index":398,"title":{},"body":{"index.html":{}}}],["open",{"_index":457,"title":{},"body":{"index.html":{}}}],["optional",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":480,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":321,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["parseint(process.env.db_port",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":442,"title":{},"body":{"index.html":{}}}],["passport",{"_index":263,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":260,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":255,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["password.length",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":275,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":274,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["platform",{"_index":396,"title":{},"body":{"index.html":{}}}],["please",{"_index":424,"title":{},"body":{"index.html":{}}}],["port",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":389,"title":{},"body":{"index.html":{}}}],["post",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["primarygeneratedcolumn",{"_index":295,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.db_host",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_name",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":347,"title":{},"body":{"index.html":{}}}],["project",{"_index":360,"title":{},"body":{"index.html":{}}}],["promise",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":278,"title":{"properties.html":{}},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["questions",{"_index":422,"title":{},"body":{"index.html":{}}}],["read",{"_index":465,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["ready",{"_index":379,"title":{},"body":{"index.html":{}}}],["real",{"_index":437,"title":{},"body":{"index.html":{}}}],["received",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["reflect",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":109,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["remove",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["repository",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["req",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["requiring",{"_index":404,"title":{},"body":{"index.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["resources",{"_index":416,"title":{},"body":{"index.html":{}}}],["response",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["root",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":365,"title":{},"body":{"index.html":{}}}],["runs",{"_index":387,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":352,"title":{},"body":{"index.html":{}}}],["secret",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretkey",{"_index":264,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":273,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":353,"title":{},"body":{"index.html":{}}}],["set",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["setup",{"_index":361,"title":{},"body":{"index.html":{}}}],["side",{"_index":354,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":406,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["sponsors",{"_index":460,"title":{},"body":{"index.html":{}}}],["src/.../database.config.ts",{"_index":488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:118",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:123",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:18",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:74",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":277,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:2",{"_index":279,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:3",{"_index":280,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":281,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:2",{"_index":282,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:3",{"_index":284,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:4",{"_index":283,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt",{"_index":249,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":254,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:22",{"_index":259,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":257,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/database.config.ts",{"_index":315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":317,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/entities/user.entity.ts",{"_index":286,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:11",{"_index":296,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:14",{"_index":294,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:17",{"_index":299,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:20",{"_index":298,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:23",{"_index":292,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.module.ts",{"_index":303,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":367,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":370,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":371,"title":{},"body":{"index.html":{}}}],["started",{"_index":346,"title":{"index.html":{}},"body":{}}],["starter",{"_index":359,"title":{},"body":{"index.html":{}}}],["statement",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["statements",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":445,"title":{},"body":{"index.html":{}}}],["steps",{"_index":384,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":402,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":262,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strength",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["sub",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":269,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":423,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":477,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":385,"title":{},"body":{"index.html":{}}}],["test",{"_index":374,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":377,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":376,"title":{},"body":{"index.html":{}}}],["tests",{"_index":372,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":459,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getprofile(req.user.userid",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(logindto",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registerdto",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.isvalidemail(email",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersrepository.findone",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["time",{"_index":438,"title":{},"body":{"index.html":{}}}],["token",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":467,"title":{},"body":{"index.html":{}}}],["true",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["try",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["twitter",{"_index":473,"title":{},"body":{"index.html":{}}}],["type",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":358,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(error.message",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["unique",{"_index":302,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":373,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":487,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":447,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":161,"title":{"entities/User.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user.email",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["username",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["users/entities/user.entity",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["users/users.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["usersmodule",{"_index":41,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["userwithoutpassword",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":439,"title":{},"body":{"index.html":{}}}],["valid",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":258,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(logindto",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":268,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":485,"title":{},"body":{"properties.html":{}}}],["video",{"_index":431,"title":{},"body":{"index.html":{}}}],["visit",{"_index":420,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":434,"title":{},"body":{"index.html":{}}}],["watch",{"_index":368,"title":{},"body":{"index.html":{}}}],["website",{"_index":471,"title":{},"body":{"index.html":{}}}],["working",{"_index":419,"title":{},"body":{"index.html":{}}}],["world",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":449,"title":{},"body":{"index.html":{}}}],["yes",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["you'd",{"_index":463,"title":{},"body":{"index.html":{}}}],["you're",{"_index":378,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { databaseConfig } from './config/database.config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: 'mysql',\n        host: configService.get('DB_HOST'),\n        port: configService.get('DB_PORT'),\n        username: configService.get('DB_USERNAME'),\n        password: configService.get('DB_PASSWORD'),\n        database: configService.get('DB_NAME'),\n        entities: [__dirname + '/**/*.entity{.ts,.js}'],\n        synchronize: true, // Set to false in production\n      }),\n    }),\n    UsersModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Get,\n  UseGuards,\n  Request,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\nimport { JwtAuthGuard } from './jwt-auth.guard';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('login')\n  async login(@Body() loginDto: LoginDto) {\n    console.log('Login request received:', loginDto);\n    try {\n      const result = await this.authService.login(loginDto);\n      return result;\n    } catch (error) {\n      throw new UnauthorizedException(error.message || 'Invalid credentials');\n    }\n  }\n\n  @Post('register')\n  async register(@Body() registerDto: RegisterDto) {\n    console.log('Register endpoint hit with data:', registerDto); //Debugging Statement\n    return this.authService.register(registerDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return this.authService.getProfile(req.user.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../users/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtStrategy } from './jwt.strategy';\nimport { ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => {\n        return {\n          secret: config.get('JWT_SECRET'),\n          signOptions: { expiresIn: '1d' },\n        };\n      },\n    }),\n    TypeOrmModule.forFeature([User]),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n  exports: [AuthService, JwtStrategy, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, ConflictException, BadRequestException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../users/entities/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(loginDto: LoginDto): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { email: loginDto.email },\n    });\n    if (user && (await bcrypt.compare(loginDto.password, user.password))) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(loginDto: LoginDto) {\n    console.log('Login attempt with:', loginDto);\n\n    try {\n      const user = await this.usersRepository.findOne({\n        where: { email: loginDto.email },\n      });\n\n      console.log('User found:', user ? 'Yes' : 'No');\n\n      if (!user) {\n        throw new UnauthorizedException('Invalid email or password');\n      }\n\n      // Debug password check\n      console.log('Stored password hash:', user.password);\n      console.log('Comparing with:', loginDto.password);\n\n      const isPasswordValid = await bcrypt.compare(\n        loginDto.password,\n        user.password,\n      );\n      console.log('Password valid:', isPasswordValid);\n\n      if (!isPasswordValid) {\n        throw new UnauthorizedException('Invalid email or password');\n      }\n\n      const payload = { sub: user.id, email: user.email };\n      const token = this.jwtService.sign(payload);\n      console.log('Generated token:', token ? 'Success' : 'Failed');\n\n      // Remove password from response\n      const { password: _, ...userWithoutPassword } = user;\n\n      return {\n        access_token: token,\n        user: userWithoutPassword,\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  }\n\n  async register(registerDto: RegisterDto) {\n    const { email, password, name } = registerDto;\n    \n    // Validate email format\n    if (!this.isValidEmail(email)) {\n      throw new BadRequestException('Invalid email format');\n    }\n    \n    // Check if user exists\n    const existingUser = await this.usersRepository.findOne({ where: { email } });\n    if (existingUser) {\n      throw new ConflictException('Email already exists');\n    }\n    \n    // Validate password strength\n    if (password.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private configService: ConfigService) {\n    const secretKey = configService.get('JWT_SECRET');\n\n    if (!secretKey) {\n      throw new Error('JWT_SECRET is not defined in environment variables');\n    }\n\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: secretKey,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, email: payload.email };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginDto {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterDto {\n  email: string;\n  password: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n} from 'typeorm';\n\n@Entity('users')\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column()\n  name: string;\n\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  exports: [TypeOrmModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/config/database.config.ts\n            \n            variable\n            databaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.12\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.12\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.12\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            bcrypt : ^5.1.1\n        \n            dotenv : ^16.4.7\n        \n            mysql2 : ^3.14.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.2\n        \n            typeorm : ^0.3.21\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseConfig   (src/.../database.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'mysql',\n  host: process.env.DB_HOST || 'localhost',\n  port: parseInt(process.env.DB_PORT || '3306'),\n  username: process.env.DB_USERNAME || 'root',\n  password: process.env.DB_PASSWORD || '',\n  database: process.env.DB_NAME || 'bulak_smart_connect',\n  entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n  synchronize: process.env.NODE_ENV !== 'production',\n  logging: process.env.NODE_ENV !== 'production',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
